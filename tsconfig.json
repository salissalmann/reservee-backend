{
  "compilerOptions": {
    /* Basic Options */
    "target": "es2021",                              /* Specify ECMAScript target version. */
    "module": "esnext",                              /* Specify module code generation. */
    "lib": ["es2021"],                               /* Specify library files to include in the compilation. */
    "allowJs": true,                                 /* Allow JavaScript files to be compiled. */
    "checkJs": false,                                /* Enable error reporting in JavaScript files. */
    "jsx": "react-jsx",                              /* Specify JSX code generation. */
    "resolveJsonModule": true,                       /* Include modules imported with .json extension. */
    "moduleResolution": "node",                     /* Use Node.js module resolution strategy. */
    "noEmit": true,                                  /* Disable emitting files from compilation. */

    /* Type Checking */
    "strict": true,                                  /* Enable all strict type-checking options. */
    "noImplicitAny": true,                           /* Raise error on expressions and declarations with an implied `any` type. */
    "strictNullChecks": true,                        /* Enable strict null checks. */
    "strictFunctionTypes": true,                     /* Enable strict checking of function types. */
    "strictBindCallApply": true,                     /* Enable strict checking of `bind`, `call`, and `apply` methods. */
    "noImplicitThis": true,                          /* Raise error on `this` expressions with an implied `any` type. */
    "alwaysStrict": true,                            /* Parse in strict mode and emit `"use strict"` for each source file. */
    "skipLibCheck": true,                            /* Skip type checking of declaration files. */

    /* Module Interoperability */
    "esModuleInterop": true,                         /* Emit additional JS interop code to better handle CommonJS imports. */
    "allowSyntheticDefaultImports": true,            /* Allow default imports from modules with `export =` syntax. */

    /* Experimental Options */
    "experimentalDecorators": true,                 /* Enable experimental support for decorators. */
    "emitDecoratorMetadata": true,                  /* Emit design-type metadata for decorated declarations. */

    /* Advanced Options */
    "baseUrl": "./",                                 /* Base directory to resolve non-relative module names. */
    "paths": {                                       /* Map module import paths to specific locations. */
      "@/*": ["src/*"]
    },
    "rootDirs": ["./src", "./tests"],                /* List of root folders whose combined content represents the structure of the project. */
    "typeRoots": ["./node_modules/@types"],          /* Specify multiple folders that contain type definitions. */
    "types": ["@cloudflare/workers-types"],          /* Type declaration files to be included in compilation. */

    /* Source Map Options */
    "sourceMap": true,                               /* Generate source map files. */
    "inlineSourceMap": false,                        /* Emit source maps as a base64-encoded string. */
    "inlineSources": true,                           /* Emit the source alongside the source maps. */

    /* Output Options */
    "outDir": "./dist",                              /* Redirect output structure to the directory. */
    "rootDir": "./src",                              /* Specify the root directory of input files. */

    /* Additional Checks */
    "noUnusedLocals": true,                          /* Report errors on unused local variables. */
    "noUnusedParameters": true,                      /* Report errors on unused parameters. */
    "noImplicitReturns": true,                       /* Report error when not all code paths in function return a value. */
    "noFallthroughCasesInSwitch": true,              /* Report errors for fallthrough cases in switch statements. */

    /* Watch Options */
    "incremental": true                              /* Enable incremental compilation. */
  },
  "include": ["src/**/*", "types/**/*.d.ts"],        /* Include specific files and directories. */
  "exclude": ["node_modules", "dist", "tests"],      /* Exclude specific files and directories. */
  "ts-node": {
    "files": true                                    /* Enable TypeScript file support in ts-node. */
  }
}
